# Code generated by craft; DO NOT EDIT.

version: "2"

linters:
  default: all
  disable:
    - depguard
    - err113
    - errcheck
    - errchkjson
    - exhaustruct
    - gochecknoglobals
    - gochecknoinits
    - ireturn
    - lll
    - mnd
    - nlreturn
    - noinlineerr
    - nonamedreturns
    - paralleltest
    - recvcheck
    - tagliatelle
    - unparam
    - wrapcheck
    - wsl
    - wsl_v5

  settings:
    cyclop:
      # The maximal code complexity to report.
      # Default: 10
      max-complexity: 20

    decorder:
      # Required order of `type`, `const`, `var` and `func` declarations inside a file.
      # Default: types before constants before variables before functions.
      dec-order:
        - const
        - var
        - type
        - func
      # If true, order of declarations is not checked at all.
      # Default: true (disabled)
      disable-dec-order-check: true
      # If true, `init` func can be anywhere in file (does not have to be declared before all other functions).
      # Default: true (disabled)
      disable-init-func-first-check: true

    funlen:
      # Checks the number of lines in a function.
      # If lower than 0, disable the check.
      # Default: 60
      lines: 80

      # Checks the number of statements in a function.
      # If lower than 0, disable the check.
      # Default: 40
      statements: 60

      # Ignore comments when counting lines.
      # Default: true
      ignore-comments: true

    govet:
      # Disable analyzers by name.
      # (in addition to default
      #   atomicalign, deepequalerrors, fieldalignment, findcall, nilness, reflectvaluecompare, shadow, sortslice,
      #   timeformat, unusedwrite
      # ).
      # Run `GL_DEBUG=govet golangci-lint run --enable=govet` to see default, all available analyzers, and enabled analyzers.
      # Default: []
      disable:
        - fieldalignment
        - shadow
      # Enable all analyzers.
      # Default: false
      enable-all: true

    misspell:
      # Correct spellings using locale preferences for US or UK.
      # Setting locale to US will correct the British spelling of 'colour' to 'color'.
      # Default is to use a neutral variety of English.
      locale: US

    perfsprint:
      # Optimizes into `err.Error()` even if it is only equivalent for non-nil errors.
      # Default: false
      err-error: true

    prealloc:
      # IMPORTANT: we don't recommend using this linter before doing performance profiling.
      # For most programs usage of prealloc will be a premature optimization.

      # Report pre-allocation suggestions on for loops.
      # Default: false
      for-loops: true

    revive:
      # Sets the default failure confidence.
      # This means that linting errors with less than 0.8 confidence will be ignored.
      # Default: 0.8
      confidence: 0.1
      # Sets the default severity.
      # See https://github.com/mgechev/revive#configuration
      # Default: warning
      severity: error
      # Enable all available rules.
      # Default: false
      enable-all-rules: true
      # Run `GL_DEBUG=revive golangci-lint run --enable-only=revive` to see default, all available rules, and enabled rules.
      rules:
        # Disabled
        - name: add-constant
          disabled: true
        - name: cognitive-complexity
          disabled: true
        - name: cyclomatic
          disabled: true
        - name: function-length
          disabled: true
        - name: line-length-limit
          disabled: true
        - name: nested-structs
          disabled: true
        - name: package-comments
          disabled: true

        # Enabled
        - name: argument-limit
          arguments:
            - 6
        - name: enforce-map-style
          arguments:
            - literal
        - name: exported
          arguments:
            - checkPrivateReceivers
            - sayRepetitiveInsteadOfStutters
        - name: function-result-limit
          arguments:
            - 3
        - name: import-alias-naming
          arguments:
            - ^[a-z_][a-z_0-9]{0,}$
        - name: max-public-structs
          arguments:
            - 8
        - name: string-format
          arguments:
            - - fmt.Errorf[0]
              - /^([^A-Z]|$)/
              - must not start with a capital letter
            - - fmt.Errorf[0]
              - /(^|[^\.!?])$/
              - must not end in punctuation
            - - panic
              - /^[^\n]*$/
              - must not contain line breaks
        - name: var-naming
          arguments:
            - []
            - []
            - - upperCaseConst: true
        - name: var-naming
          arguments:
            - []
            - []
            - - skipPackageNameChecks: true
        - name: unhandled-error
          arguments:
            - bytes.Buffer.Write.*
            - fmt.Print
            - fmt.Printf
            - fmt.Println
            - io.Writer.Write.*
            - strings.Builder.Write.*
        - name: unused-parameter
          arguments:
            - allowRegex: ^_
        - name: unused-receiver
          arguments:
            - allowRegex: ^_

    tagalign:
      # Specify the order of tags, the other tags will be sorted by name.
      # This option will be ignored if `sort` is false.
      # Default: []
      order:
        - json
        - yaml
        - yml
        - toml
        - mapstructure
        - binding
        - builder
        - validate

    testifylint:
      # Enable all checkers (https://github.com/Antonboom/testifylint#checkers).
      # Default: false
      enable-all: true
      require-error:
        # Regexp for assertions to analyze. If defined, then only matched error assertions will be reported.
        # Default: ""
        fn-pattern: ^NoErrorf?$

    varnamelen:
      # The longest distance, in source lines, that is being considered a "small scope".
      # Variables used in at most this many lines will be ignored.
      # Default: 5
      max-distance: 10
      # The minimum length of a variable's name that is considered "long".
      # Variable names that are at least this long will be ignored.
      # Default: 3
      min-name-length: 2

    whitespace:
      # Enforces newlines (or comments) after every multi-line if statement.
      # Default: false
      multi-if: true
      # Enforces newlines (or comments) after every multi-line function signature.
      # Default: false
      multi-func: true

  exclusions:
    generated: lax
    presets:
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - linters:
          - dupl
          - funlen
          - goconst
          - maintidx
        path: _test.go
      - path: (.+)\.go$
        text: G303
      - path: (.+)\.go$
        text: G306
      - path: (.+)\.go$
        text: ST1003
    paths:
      - examples

issues:
  max-issues-per-linter: 0
  max-same-issues: 0

formatters:
  enable:
    - gci
    - gofmt
    - gofumpt
    - golines
  settings:
    gci:
      # Section configuration to compare against.
      # Section names are case-insensitive and may contain parameters in ().
      # The default order of sections is `standard > default > custom > blank > dot > alias > localmodule`,
      # If `custom-order` is `true`, it follows the order of `sections` option.
      # Default: ["standard", "default"]
      sections:
        - standard
        - default
        - prefix(github.com/kilianpaquier/go-builder-generator)
    gofmt:
      # Apply the rewrite rules to the source before reformatting.
      # https://pkg.go.dev/cmd/gofmt
      # Default: []
      rewrite-rules:
        - pattern: interface{}
          replacement: any
        - pattern: a[b:len(a)]
          replacement: a[b:]
    golines:
      # Target maximum line length.
      # Default: 100
      max-len: 200
      # Shorten single-line comments.
      # Default: false
      shorten-comments: true
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
