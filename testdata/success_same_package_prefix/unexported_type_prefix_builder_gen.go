// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

package success_same_package

import (
	"context"
)

// unexportedTypePrefixBuilder represents unexportedTypePrefix's builder.
type unexportedTypePrefixBuilder struct {
	build unexportedTypePrefix
}

// newUnexportedTypePrefixBuilder creates a new unexportedTypePrefixBuilder.
func newUnexportedTypePrefixBuilder() *unexportedTypePrefixBuilder {
	return &unexportedTypePrefixBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *unexportedTypePrefixBuilder) Copy() *unexportedTypePrefixBuilder {
	return &unexportedTypePrefixBuilder{b.build}
}

// Build returns built unexportedTypePrefix.
func (b *unexportedTypePrefixBuilder) Build() *unexportedTypePrefix {
	result := b.build
	return &result
}

// SetCtx sets unexportedTypePrefix's Ctx.
func (b *unexportedTypePrefixBuilder) SetCtx(ctx context.Context) *unexportedTypePrefixBuilder {
	b.build.Ctx = ctx
	return b
}

// SetInt64Alias sets unexportedTypePrefix's Int64Alias.
func (b *unexportedTypePrefixBuilder) SetInt64Alias(int64Alias Int64Alias) *unexportedTypePrefixBuilder {
	b.build.Int64Alias = int64Alias
	return b
}

// SetNonExported sets unexportedTypePrefix's nonExported.
func (b *unexportedTypePrefixBuilder) SetNonExported(nonExported string) *unexportedTypePrefixBuilder {
	b.build.nonExported = nonExported
	return b
}

// SetPrimitive sets unexportedTypePrefix's Primitive.
func (b *unexportedTypePrefixBuilder) SetPrimitive(primitive string) *unexportedTypePrefixBuilder {
	b.build.Primitive = primitive
	return b
}
