// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

// Code generated from types.go.

package testdata

import "context"

// SamePackageBuilder represents SamePackage's builder.
type SamePackageBuilder struct {
	build SamePackage
}

// NewSamePackageBuilder creates a new SamePackageBuilder.
func NewSamePackageBuilder() *SamePackageBuilder {
	return &SamePackageBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *SamePackageBuilder) Copy() *SamePackageBuilder {
	return &SamePackageBuilder{b.build}
}

// Build returns built SamePackage.
func (b *SamePackageBuilder) Build() *SamePackage {
	result := b.build
	return &result
}

// Ctx sets SamePackage's Ctx.
func (b *SamePackageBuilder) Ctx(ctx context.Context) *SamePackageBuilder {
	b.build.Ctx = ctx
	return b
}

// Int64Alias sets SamePackage's Int64Alias.
func (b *SamePackageBuilder) Int64Alias(int64Alias Int64Alias) *SamePackageBuilder {
	b.build.Int64Alias = int64Alias
	return b
}

// nonExported sets SamePackage's nonExported.
func (b *SamePackageBuilder) nonExported(nonExported string) *SamePackageBuilder {
	b.build.nonExported = nonExported
	return b
}

// NonExportedExportOpt sets SamePackage's nonExportedExportOpt.
func (b *SamePackageBuilder) NonExportedExportOpt(nonExportedExportOpt string) *SamePackageBuilder {
	b.build.nonExportedExportOpt = nonExportedExportOpt
	return b
}

// Primitive sets SamePackage's Primitive.
func (b *SamePackageBuilder) Primitive(primitive string) *SamePackageBuilder {
	b.build.Primitive = primitive
	return b
}
