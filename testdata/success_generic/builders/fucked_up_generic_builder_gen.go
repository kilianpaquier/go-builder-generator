// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

package builders

import (
	"github.com/kilianpaquier/go-builder-generator/testdata/success_generic"
)

// FuckedUpGenericBuilder represents FuckedUpGeneric's builder.
type FuckedUpGenericBuilder[T struct {
	Property string `builder:"pointer"`
}] struct {
	build success_generic.FuckedUpGeneric[T]
}

// NewFuckedUpGenericBuilder creates a new FuckedUpGenericBuilder.
func NewFuckedUpGenericBuilder[T struct {
	Property string `builder:"pointer"`
}]() *FuckedUpGenericBuilder[T] {
	return &FuckedUpGenericBuilder[T]{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *FuckedUpGenericBuilder[T]) Copy() *FuckedUpGenericBuilder[T] {
	return &FuckedUpGenericBuilder[T]{b.build}
}

// Build returns built FuckedUpGeneric.
func (b *FuckedUpGenericBuilder[T]) Build() *success_generic.FuckedUpGeneric[T] {
	result := b.build
	return &result
}

// Prop sets FuckedUpGeneric's Prop.
func (b *FuckedUpGenericBuilder[T]) Prop(prop T) *FuckedUpGenericBuilder[T] {
	b.build.Prop = prop
	return b
}
