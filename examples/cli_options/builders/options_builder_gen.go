// Code generated by go-builder-generator (https://github.com/kilianpaquier/go-builder-generator). DO NOT EDIT.

// Code generated from types.go.

package builders

import (
	"fmt"

	"github.com/kilianpaquier/go-builder-generator/examples"
)

// OptionsBuilder represents Options's builder.
type OptionsBuilder struct {
	build examples.Options
}

// NewOptionsBuilder creates a new OptionsBuilder.
func NewOptionsBuilder() *OptionsBuilder {
	return &OptionsBuilder{}
}

// Copy reassigns the builder struct (behind pointer) to a new pointer and returns it.
func (b *OptionsBuilder) Copy() *OptionsBuilder {
	return &OptionsBuilder{b.build}
}

// Build returns built Options.
func (b *OptionsBuilder) Build() (*examples.Options, error) {
	result := b.build
	if err := result.Validate(); err != nil {
		return nil, fmt.Errorf("validation of 'Options''s struct: %w", err)
	}
	return &result, nil
}

// SetSomeField sets Options's SomeField.
func (b *OptionsBuilder) SetSomeField(someField int64) *OptionsBuilder {
	b.build.SomeField = someField
	return b
}

// SetSomeSlice sets Options's SomeSlice.
func (b *OptionsBuilder) SetSomeSlice(someSlice []string) *OptionsBuilder {
	b.build.SomeSlice = someSlice
	return b
}
