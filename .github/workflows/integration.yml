# Code generated by kickr; DO NOT EDIT.

name: Integration
run-name: Integration

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - alpha
      - beta
      - dev
      - develop
      - development
      - next
      - staging
      - main
      - master
      - v[0-9]+.x
      - v[0-9]+.[0-9]+.x
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  run-workflow:
    name: Run
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' || github.ref_protected || !github.event.pull_request.draft }}
    outputs:
      skip: ${{ steps.skip.outputs.skip }}
    permissions:
      pull-requests: read
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - id: pull_requests
        if: ${{ github.event_name == 'push' }}
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          result-encoding: string
          script: |-
            const { data } = await github.rest.pulls.list({
              head: `${context.repo.owner}:${process.env.HEAD}`,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })
            return data.length === 0
        env:
          HEAD: ${{ github.head_ref || github.ref_name }}
      - id: skip
        if: ${{ github.event_name == 'pull_request' || steps.pull_requests.outputs.result == 'true' }}
        run: |-
          echo "Running workflow"
          echo "skip=false" >> $GITHUB_OUTPUT

  pre-commit:
    name: Pre-Commit
    runs-on: ubuntu-latest
    if: ${{ needs.run-workflow.outputs.skip == 'false' }}
    needs: run-workflow
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          # renovate: datasource=github-tags packageName=actions/python-versions
          python-version: 3.13.7
      - uses: pre-commit/action@2c7b3805fd2a0fd8c1884dcaebf91fc102a13ecd # v3.0.1

  shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest
    if: ${{ needs.run-workflow.outputs.skip == 'false' }}
    needs: run-workflow
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      # https://github.com/marketplace/actions/shellcheck
      - uses: ludeeus/action-shellcheck@00cae500b08a931fb5698e11e79bfbd38e612a38 # 2.0.0
        with:
          check_together: "yes"

  go-vulncheck:
    name: Go Vulnerability Check
    runs-on: ubuntu-latest
    if: ${{ needs.run-workflow.outputs.skip == 'false' }}
    needs: run-workflow
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: golang/govulncheck-action@b625fbe08f3bccbe446d94fbf87fcc875a4f50ee # v1.0.4
        with:
          check-latest: true
          go-package: ./...
          go-version-input: '1.25.3'

  go-lint:
    name: Go Lint
    runs-on: ubuntu-latest
    if: ${{ needs.run-workflow.outputs.skip == 'false' }}
    needs: run-workflow
    permissions:
      pull-requests: write
      security-events: write
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          check-latest: true
          go-version: '1.25.3'
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: mkdir -p reports/
      - uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          args: --config=.golangci.yml --timeout=240s --allow-parallel-runners --output.sarif.path="reports/golangci-lint.sarif" --output.text.path=stdout
          problem-matchers: true
          # renovate: datasource=github-tags packageName=golangci/golangci-lint depName=golangci-lint
          version: v2.5.0
      - if: ${{ !cancelled() }}
        uses: github/codeql-action/upload-sarif@f443b600d91635bebf5b0d9ebc620189c0d6fba5 # v4.30.8
        with:
          sarif_file: reports/golangci-lint.sarif
          category: golangci-lint

  go-test:
    name: Go Test
    runs-on: ${{ matrix.os }}
    needs: go-lint
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          check-latest: true
          go-version: '1.25.3'
          token: ${{ secrets.GITHUB_TOKEN }}
      - run: mkdir -p reports/
      - if: ${{ matrix.os != 'windows-latest' }}
        shell: bash
        run: go test ./... -v -coverpkg="./..." -covermode="count" -coverprofile="reports/go-coverage.native.out" -timeout=30s | tee "reports/tests.log"
      - if: ${{ matrix.os == 'windows-latest' }}
        run: go test ./... -v -coverpkg="./..." -covermode="count" -coverprofile="reports/go-coverage.native.out" -timeout=30s | tee "reports/tests.log"
      - shell: bash
        run: |-
          go run github.com/jstemmer/go-junit-report/v2@latest -in "reports/tests.log" -out "reports/go-test.xunit.xml"
          go tool test2json < "reports/tests.log" > "reports/go-test.native.json"
      - uses: codecov/test-results-action@47f89e9acb64b76debcd5ea40642d25a4adced9f # v1.1.1
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: false
          files: reports/go-test.xunit.xml
          flags: ${{ matrix.os }}
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          OS: ${{ matrix.os }}
      - uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          codecov_yml_path: .codecov.yml
          disable_search: true
          env_vars: OS
          fail_ci_if_error: false
          files: reports/go-coverage.native.out
          flags: ${{ matrix.os }}
          slug: ${{ github.repository }}
          token: ${{ secrets.CODECOV_TOKEN }}
        env:
          OS: ${{ matrix.os }}

  workflow-status:
    name: Status
    runs-on: ubuntu-latest
    if: ${{ always() && (github.event_name != 'pull_request' || !github.event.pull_request.draft) }}
    needs:
      - go-test
      - pre-commit
      - shellcheck
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'skipped') || contains(needs.*.result, 'cancelled') }}
        run: echo "Some jobs didn't end with success status" && exit 1
      - run: echo "All jobs ended with success"

  notify-workflow:
    name: Notify Workflow
    runs-on: ubuntu-Latest
    if: ${{ github.event_name == 'push' }}
    needs: workflow-status
    permissions:
      actions: write
    strategy:
      fail-fast: false
      matrix:
        workflow:
          - deployment
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          result-encoding: string
          script: |-
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              ref: process.env.GITHUB_REF_NAME,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_ID,
            })
        env:
          WORKFLOW_ID: ${{ matrix.workflow }}.yml
